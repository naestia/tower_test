name: testing workflow

defaults:
  run:
    working-directory: qa

env:
  TERRAFORM_VERSION: 1.9.6
  AWS_REGION: eu-west-1
  ROLE_SESSION_NAME: Github_AWS

on:
  push:
    branches:
      - main
      - test

jobs:
  deploy:
    name: Set up terraform and aWS
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v3

    - name: Set Role Name
      if: endswith(github.ref, 'main')
      env:
        TERRAFORM_BACKEND_CONFIG: "./backend/prod-backend.tfbackend"
        ROLE_TO_ASSUME: ${{secrets.PROD_ROLE}}
      run: |
        echo "Prod"
    
    - name: Set Role name test
      if: endswith(github.ref, 'test')
      env:
        TERRAFORM_BACKEND_CONFIG: "./backend/prod-backend.tfbackend"
        ROLE_TO_ASSUME: ${{secrets.TEST_ROLE}}
      run: |
        echo "Test"
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Configure Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        terraform_wrapper: false

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: |
        echo "Running ${{env.TERRAFORM_BACKEND_CONFIG}} as backend Config."
        terraform init -backend-config=${{env.TERRAFORM_BACKEND_CONFIG}}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Apply
      id: plan
      run: terraform apply -auto-approve
      
