image: hashicorp/terraform

pipelines:
  pull-requests:
    '**':
      - parallel:
          steps:
            - step:
                oidc: true
                name: Plan QA
                condition:
                  changesets:
                    includePaths:
                      - "qa/**"
                script:
                  - cd qa
                  - export AWS_ROLE_ARN=$QA_ROLE_ARN
                  - mkdir web-identity && mkdir artifacts
                  - echo "Hello world" > artifacts/hello.txt
                  - export AWS_WEB_IDENTITY_TOKEN_FILE=./web-identity/web-identity-token
                  - echo $BITBUCKET_STEP_OIDC_TOKEN > ./web-identity/web-identity-token
                  - terraform init
                  - terraform plan
                artifacts:
                  - artifacts/*

  branches:
    main:
      - stage:
          name: Rollback
          steps:
            - step:
                oidc: true
                name: Initialize Rollback
                variables:
                  - S3_BACKEND: "s3://tower-test-tf-backend/state-artifacts"
                deployment: Production
                trigger: manual
                script:
                  - PREVIOUS_COMMIT_HASH=$(python3 scripts/test-commits.py | cut -c -7)
                  - terraform apply -state $S3_BACKEND/$PREVIOUS_COMMIT_HASH-tf.tfstate

      - stage: 
          name: Upload latest state artifact
          steps:
            - step:
                image: amazon/aws-cli
                oidc: true
                name: Upload artifact
                script:
                  - export AWS_ROLE_ARN=$QA_ROLE_ARN
                  - export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token
                  - echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
                  - aws s3 cp s3://tower-test-tf-backend/core/terraform.tfstate s3://tower-test-tf-backend/state-artifacts/$BITBUCKET_COMMIT-tf.tfstate
